name: Run python tests

on: 
  workflow_call:
    inputs:
      tests_dir:
        required: true
        type: string
        description: 'The directory where the tests are stored'

      pytest_cpus:
        default: 1
        required: false
        type: number
        description: 'How many cpu cores to use when running tests'
      
      python_versions:
        default: '["3.12"]'
        required: false
        type: string
        description: 'The python versions to run tests on'
      
      os_list:
        default: '["ubuntu-latest"]'
        required: false
        type: string
        description: 'The operating systems to run tests on'

      extra_pytest_arguments:
        default: ''
        required: false
        type: string
        description: 'Any other arguments to pass to the pytest command'
      
      create_coverage_comment:
        default: false
        required: false
        type: boolean
        description: 'Wether or not to create a coverage comment. See https://github.com/py-cov-action/python-coverage-comment-action/tree/v3/'


jobs:
  run-python-tests:
    name: Run python tests

    strategy:
      matrix:
        python-version: ${{fromJson(inputs.python_versions)}}
        os: ${{fromJson(inputs.os_list)}}

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      
      - name: Install test dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest-xdist
          pip install pytest-cov
          pip install coverage
      
      - name: Install dependencies from requirements.txt
        if: ${{ hashFiles('requirements.txt') != '' }}
        run: pip install -r requirements.txt
      
      - name: Run tests
        run: |
          pytest ${{inputs.tests_dir}} -n=${{inputs.pytest_cpus}} --cov=./ ${{inputs.extra_pytest_arguments}} --cov-report=json --cov-append
      
      - name: Report coverage
        run: |
          coverage report -m
          
  
  create-coverage-comment:
    name: Create coverage comment

    if: inputs.create_coverage_comment

    needs: [run-python-tests]
    runs-on: 'ubuntu-latest'

    permissions:
      contents: write
    
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        id: download
        with:
          pattern: coverage-*
          merge-multiple: true

      - name: Generate coverage comment
        id: coverage_comment
        uses: py-cov-action/python-coverage-comment-action@v3.24
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MERGE_COVERAGE_FILES: true