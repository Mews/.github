name: Run python tests

on: 
  workflow_call:
    inputs:
      tests_dir:
        required: true
        type: string
        description: 'The directory where the tests are stored'

      coverage_dir:
        required: true
        type: string
        description: 'The directory to track coverage in'

      pytest_cpus:
        default: 1
        required: false
        type: number
        description: 'How many cpu cores to use when running tests'
      
      python_versions:
        default: '["3.12"]'
        required: false
        type: string
        description: 'The python versions to run tests on'
      
      os_list:
        default: '["ubuntu-latest"]'
        required: false
        type: string
        description: 'The operating systems to run tests on'


jobs:
  run-python-tests:
    permissions:
      contents: write

    strategy:
      matrix:
        python-version: ${{fromJson(inputs.python_versions)}}
        os: ${{fromJson(inputs.os_list)}}

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      
      - name: Install test dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest-xdist
          pip install pytest-cov
          pip install coverage
      
      - name: Install dependencies from requirements.txt
        if: ${{ hashFiles('requirements.txt') != '' }}
        run: pip install -r requirements.txt
      
      - name: Run tests
        run: |
          coverage run -m pytest ${{inputs.tests_dir}} -n=${{inputs.pytest_cpus}} --cov=${{inputs.coverage_dir}} --cov=${{inputs.tests_dir}}
      
      - name: Report coverage
        run: |
          coverage report -m
      
      - name: Generate coverage comment
        id: coverage_comment
        uses: py-cov-action/python-coverage-comment-action@v3
        with:
          GITHUB_TOKEN: ${{ github.token }}